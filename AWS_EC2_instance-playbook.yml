---
  - name: Provision EC2 instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: ssh-server
      image: ami-026c8acd92718196b
      region: us-east-1
      keypair: my_sshkeypair
      ec2_volume_size_sda: 60
      ec2_volume_size_sdb: 10
      count: 2
      my_user_data: |
                 #!/bin/sh
                 sudo /sbin/parted /dev/xvdb mklabel gpt --script
                 sudo /sbin/parted /dev/xvdb mkpart primary 0% 100% --script
                 sudo mkfs.ext4 /dev/xvdb1
                 sudo mkdir /var/www/ && sudo mount /dev/xvdb1 /var/www/
                 sudo apt update && apt install nginx -y

    tasks:

      - name: Create new security group
        local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: Security group for EC2 instance
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

      - name: Create a new EC2 key
        ec2_key:
          name: "{{ keypair }}"
          region: "{{region}}"
        register: ec2_key_result

      - name: Save private key
        copy: content="{{ ec2_key_result.key.private_key }}" dest="./aws_key.pem" mode=0600
        when: ec2_key_result.changed

      - name: Launch new t2 micro EC2 instance
        local_action:
          module: ec2
          group: "{{ security_group }}"
          instance_type: "{{ instance_type}}"
          image: "{{ image }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{ count }}"
          user_data: "{{ my_user_data }}"
          volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: "{{ ec2_volume_size_sda }}"
            delete_on_termination: true
          - device_name: /dev/sdb
            volume_type: gp2
            volume_size: "{{ ec2_volume_size_sdb }}"
            delete_on_termination: true
        register: ec2

      - name: Wait for EC2 instance is ready for SSH access
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Adding tags
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: ssh server
            Owner: Dmitry Ermizin
            Purpose: Create EC2 instance from ansible